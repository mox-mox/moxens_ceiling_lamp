#include <avr/io.h>
#include <inttypes.h>
#include <util/delay.h>
#include <avr/interrupt.h>
#include "uart.h"
#include "suart.h"
#include "timer.h"
#include "stdbool.h"
#include <stdlib.h>
//#include <string>

//INIT
char startByte = '!',
     endByte = '#';
char* hextab = "0123456789ABCDEF";
void init() {
	sei();
	uartInit();   // serielle Ausgabe an PC
	suart_init();  // Software UART
	timerInit();  // "Systemzeit" initialisieren
}

void sayHello() {
    suart_puts("\n\n___________________________________\n");
    suart_puts("suart: hello world !\n");
    uart_puts("\n\n___________________________________\n");
    uart_puts("uart: hello world !\n");
}

bool waitForBorderByte(int pos) {
    char c = suart_getc_wait();
    char byte = startByte; // startByte
    if(pos == 1) {
        byte = endByte; // endByte
    }

    if(c == byte) {
        return true;
    } 
    return false;
}

char getLengthByte() {
    return suart_getc_wait();
}

void getData(char *data, int length) {
    int i = 0;
    for(i = 0; i < length-48; i++) {
        data[i] = suart_getc_wait();
    }
}

/*char* encode_int(int i) {
    char* c = (char*)malloc(sizeof(char) * 9);

    int j = 0;
    for (j = 0; j < 4; j++) {
      c[(j << 1)] = hextab[((i % 256) >> 4)];
      c[(j << 1) + 1] = hextab[((i % 256) % 16)];

      i = (i >> 8);
    }
    c[8] = 0;

    return c;
}*/

int calcChecksum(char* str) {
    int i;
    int chk = 0x12345678;

    for (i = 0; str[i] != '\0'; i++) {
      chk += ((int)(str[i]) * (i + 1));
    }

    return chk;
}

bool compareChecksum(char data[], int length) {
    char checksum = suart_getc_wait();
    //char chkStr[(length-48)+3] = startByte, length, data, endByte;
    calcChecksum(startByte+length+data+endByte+'\0');
/*
    int calcChecksum = (int)startByte-48 ^ length-48;
    int i = 0;
    for(i = 0; i < sizeof(data); i++) {
        calcChecksum = (int)calcChecksum-48 ^ (int)data[i]-48;
    }
    calcChecksum = (int)calcChecksum-48 ^ (int)endByte-48;
    if(checksum == calcChecksum) {
        return true;
    }
    return false;*/
}

void doCommand(char *data, int length) {
    int i = 0;
    for(i = 0; i < length-48; i++) {
        if(i == 0 && data[i] == 'b') {
            suart_puts("success\n");
        } else {
            suart_puts("failure\n");
        }
    }
}

bool waitForCommands() {
    if(!waitForBorderByte(0)) { // check for startByte
        return true;
    }
    char length = getLengthByte();
    char data[length];
    getData(data, length);
    if(!waitForBorderByte(1)) { // check for endByte
        return true;
    }
    if(compareChecksum(data, length)) {
        doCommand(data, length);
        return false;
    }
    return false;
}

int main(void) {

	//Initialisierung ausfuehren
	init();
    sayHello();
    while(waitForCommands()) {
        // wait for commands
    }

/*
    uart_putc(0xff);
    bool end = false;
    while(!end) {
        char c = uart_getc();
        suart_putc(c);
        //if(c == '-') end = true;
    }
  */  suart_puts("the end\n");
    return true;
}
